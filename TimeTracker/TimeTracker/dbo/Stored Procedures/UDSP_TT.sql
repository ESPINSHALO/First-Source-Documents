CREATE PROCEDURE [dbo].[UDSP_TT] (@DT DATE)
AS
BEGIN


CREATE TABLE #TTGRP (SNO	bigint,EMPID nvarchar(30),DATE date,TIME time,
INOUT varchar(3),LAG_TIME datetime,LAG_SS int,MAX_OUTSIDE int,
relevantid bigint,GRP bigint,maxcol1ingrp date)

CREATE TABLE #TTLAG (EMPID varchar(50),DATE date,TIME time,INOUT varchar(3),LAG_TIME datetime,LAG_SS int,INOUT_1	varchar(3))
INSERT INTO #TTLAG SELECT * FROM VW_TTLAG WITH (NOLOCK) -- WHERE DATE = @DT
CREATE TABLE #TTMNWT (Date	date,EmpID nvarchar(30),Max_outside	int)
INSERT INTO #TTMNWT SELECT * FROM VW_TT_MNWT WITH (NOLOCK) -- WHERE DATE = @DT

;WITH C AS 
( 
SELECT SNO,EMPID,DATE,TIME,INOUT,LAG_TIME,LAG_SS,MAX_OUTSIDE,relevantid
,max(relevantid) OVER (ORDER BY EMPID,DATE,TIME ROWS UNBOUNDED PRECEDING) AS GRP
FROM (
SELECT 
ROW_NUMBER() OVER (ORDER BY A.EMPID,A.DATE,A.TIME,A.Lag_SS desc) as sno,
A.EMPID,A.DATE,A.TIME,A.INOUT,A.LAG_TIME,A.LAG_SS,B.Max_Outside
FROM #TTLAG A WITH (NOLOCK)
LEFT JOIN #TTMNWT B WITH (NOLOCK)
ON A.DATE = B.DATE
AND A.EMPID = B.EMPID
AND A.LAG_SS = B.Max_outside
) X
CROSS APPLY (VALUES (CASE WHEN MAX_OUTSIDE is not null then sno END )) AS a(relevantid)
)
INSERT INTO #TTGRP
SELECT *,
MIN(DATE) OVER (PARTITION BY GRP ORDER BY SNO ROWS UNBOUNDED PRECEDING ) AS maxcol1ingrp
 FROM C


SELECT EMPID,DATE,MAX(GRP) AS GRP,MAX(IN_TIME) AS IN_TIME,MAX(OUT_TIME) AS OUT_TIME 
into #TT
FROM 
(
SELECT EMPID,GRP,maxcol1ingrp,MIN(DATE) AS DATE
,MIN(CONVERT(DATETIME,DATE)+CONVERT(DATETIME,TIME)) AS IN_TIME
,MAX(CONVERT(DATETIME,DATE)+CONVERT(DATETIME,TIME)) AS OUT_TIME
 FROM #TTGRP
GROUP BY EMPID,GRP,maxcol1ingrp
) X
GROUP BY EMPID,DATE

SELECT EMPID,DATE,IN_TIME,OUT_TIME,DATEDIFF(SS,IN_TIME,OUT_TIME)/3600.0 AS HRS_WORKED 
FROM #TT WITH (NOLOCK)
WHERE DATE = @DT
ORDER BY EMPID,DATE,IN_TIME

DROP TABLE #TTGRP
DROP TABLE #TTLAG
DROP TABLE #TTMNWT

END
