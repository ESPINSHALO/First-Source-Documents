CREATE VIEW [dbo].[VW_TTLAG]
AS
SELECT EMPID,DATE,TIME,INOUT,LAG_TIME,LAG_SS,
CASE WHEN (
LAG_SS > 9*3600
AND INOUT='OUT'
AND LAG(LAG_SS) OVER (PARTITION BY EMPID ORDER BY DATE,TIME) IS NOT NULL
--AND LAG(LAG_SS) OVER (PARTITION BY EMPID ORDER BY DATE,TIME) < 9*3600
)
THEN 'IN' ELSE INOUT END AS INOUT_1

FROM (


SELECT EMPID,DATE,TIME,
INOUT,
LAG_TIME,
--DATEDIFF(SS,LAG_TIME,CONVERT(DATETIME,DATE)+CONVERT(DATETIME,TIME)) AS LAG_SS,
DATEDIFF(SS,LAG_TIME,CAST(DATE AS DATETIME)+CAST(TIME AS DATETIME)) AS LAG_SS
 FROM (
SELECT EMPID,DATE,TIME,InOut,
--LAG(CONVERT(DATETIME,DATE)+CONVERT(DATETIME,TIME)) OVER (PARTITION BY EMPID ORDER BY DATE,TIME,InOut) AS LAG_TIME
LAG(CAST(DATE AS DATETIME) + CAST(TIME AS DATETIME)) OVER (PARTITION BY EMPID ORDER BY DATE,TIME,InOut) AS LAG_TIME
 FROM VW_TTFORMAT WITH (NOLOCK)
 
) X
) Y

/*
WITH CTE AS (
SELECT EMPID,DATE,TIME,InOut,
LAG(CONVERT(DATETIME,DATE)+CONVERT(DATETIME,TIME)) OVER (PARTITION BY EMPID ORDER BY DATE,TIME,InOut) AS LAG_TIME
FROM VW_TTFORMAT WITH (NOLOCK)
)
SELECT EMPID,DATE,TIME,INOUT,LAG_TIME,LAG_SS,
CASE WHEN (LAG_SS > 9*3600 AND INOUT='OUT' AND LAG(LAG_SS) OVER (PARTITION BY EMPID ORDER BY DATE,TIME) IS NOT NULL)
	THEN 'IN' ELSE INOUT END AS INOUT_1
FROM (
SELECT EMPID,DATE,TIME,INOUT,LAG_TIME,DATEDIFF(SS,LAG_TIME,CONVERT(DATETIME,DATE)+CONVERT(DATETIME,TIME)) AS LAG_SS
FROM CTE
) X
*/


